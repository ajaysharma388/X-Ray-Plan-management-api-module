(in-package :aml)

(define-class Shell-3d-welds-layout-class
  :inherit-from(series-object)
  :properties(
              welders                             (default nil)
              text-height                         (default nil)
              welders-list                        (default nil)
              welders-inside-outside-list         (default nil)
              welds-size-list                     (default nil)
              weld-types-list                     (default nil)
              tank-od                             (default 50) 
              center                              (default '(0 0 0)) 
              courses-height-list                 (default nil)
              courses-plates-start-angles-list    (default nil)                                                                 
              series-prefix                       'Course                             
              class-expression                    'shell-course-3d-welds-layout-class                ;;;; series object
              quantity                            (length ^courses-height-list)                      ;;;; for each courses
              init-form '(                                                                                             
                          course-height                       (nth ^index ^^courses-height-list) 
                          course-plates-start-angles-list     (nth ^index ^^courses-plates-start-angles-list)
                          start-elevation                           (nth 2 (point-along-vector
                                                                            ^^center
                                                                            '(0 0 1)
                                                                            (loop
                                                                              for height in (subseq ^^courses-height-list 0 ^index)
                                                                              sum height
                                                                              )
                                                                            )
                                                                      )
                          course-number                        ^index
                          weld-types-list                      ^^weld-types-list  
                          welders-list                         ^^welders-list
                          welds-size-list                      ^^welds-size-list
                          text-height                          ^^text-height
                          welders-inside-outside               (nth ^index ^^welders-inside-outside-list)
                          welders                              ^^welders
                          )
              )
  :subobjects(
              (top-circumferential-welds :class 'shell-course-3d-circumferential-welds-class
                welders-inside-outside           (nth (length ^^courses-height-list) ^^welders-inside-outside-list)
                weld-types-list                  ^^weld-types-list
                welders-list                     ^^welders-list
                welds-size-list                  ^^welds-size-list
                tank-od                          ^^tank-od
                elevation                        (loop                                             ;;;; these are the top circumferential welds
                                                   for height in ^^courses-height-list             ;;;; for the tank geometry   
                                                   do                                             
                                                   sum height
                                                   )
                course-height                     (first (last ^^courses-height-list))
                course-plates-start-angles-list  (if (oddp (length ^^courses-plates-start-angles-list))
                                                   (nth 0 ^^courses-plates-start-angles-list)
                                                   (nth 1  ^^courses-plates-start-angles-list)
                                                   )
                course-number                    (length  ^^courses-height-list)
                text-height                      ^^text-height
                )
              
              )
  )





(defun get-random-welder (welders-list)
  (nth (random (length welders-list)) welders-list)  
  )


